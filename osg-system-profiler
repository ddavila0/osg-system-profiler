#!/bin/sh

check_rpm()
{
    RPM=$1

    echo "***** RPM: $RPM"                    >> $log
    rpm -q $RPM                               >> $log 2>&1
    if [ $? -eq 0 ]; then
        rpm -q --verify $RPM                  >> $log 2>&1
        if [ $? -eq 0 ]; then
            echo "$RPM has not been modified" >> $log
        fi
        RC=0
    else
        RC=1
    fi
    echo ""                                   >> $log
    return $RC
}

check_cert()
{
    CERT=$1
    echo "***** Certificate: $CERT"         >> $log
    if [ -r $CERT ]; then
        openssl x509 -in $CERT -text -noout >> $log 2>&1
    else
        echo "Can't read $CERT"             >> $log
    fi
    echo ""                                 >> $log
}

tail_log()
{
    LOG=$1
    LINES=$2
    echo "***** $LOG (last $LINES lines)" >> $log
    if [ -r $LOG ]; then
        tail --lines=$LINES $LOG          >> $log 2>&1
    else 
        echo "$LOG doesn't exist"         >> $log
    fi
    echo ""                               >> $log
}

dump_file()
{
    FILE=$1
    echo "***** $FILE"                   >> $log
    if [ -r $FILE ]; then
        cat $FILE                        >> $log 2>&1
    else 
        echo "$FILE doesn't exist"       >> $log
    fi
    echo ""                              >> $log
}

dump_files_in_dir()
{
    DIR=$1
    echo "***** Files in $DIR" >> $log
    if [ -d $DIR ]; then
        find $DIR -type f | xargs -iX bash -c "echo File: X; cat X; echo" >> $log
    else
        echo "$DIR can't be read" >> $log
    fi
    echo "" >> $log
}

list_directory()
{
    DIR=$1
    echo "***** Contents of $DIR" >> $log
    if [ -d $DIR ]; then
        ls -laF $DIR              >> $log 2>&1
    else
        echo $DIR                 >> $log
    fi
    echo ""                       >> $log

}

run_cmd()
{
    CMD=$1
    shift
    OPTIONS=$@

    echo "***** Running: $CMD $OPTIONS"         >> $log
    which $CMD > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        $CMD $OPTIONS                           >> $log 2>&1
    else
        echo $?                                 >> $log
        echo "Cannot find $CMD."                >> $log
    fi
    echo ""                                     >> $log
}

dir=`pwd`

if [ ! -w $dir ]; then
    echo "I'm sorry, I don't have permission to create osg-profile.txt"
    echo "in the current directory. Please change into a directory where"
    echo "you have permission, or switch to a user that does have permission"
    exit 1
fi

log=$dir/"osg-profile.txt"
rm -f $log

echo "OSG System Profiler"
echo "Analyzing..."

echo "OSG System Profile" >> $log
echo Created at `date`    >> $log
echo ""                   >> $log

run_cmd hostname
run_cmd uname -a

check_rpm "kernel"

dump_file "/etc/issue"
dump_file "/etc/redhat-release"
dump_file "/etc/nsswitch.conf"
dump_file "/etc/hosts"

run_cmd df --human-readable --print-type
run_cmd free

dump_file "/proc/cpuinfo"

run_cmd netstat -i
run_cmd /sbin/iptables -vL

dump_file "/etc/selinux/config"
dump_file "/selinux/enforce"

run_cmd osg-version
rpm -qa | grep "^osg" | xargs -n 1 rpm -q >> $log
echo "" >> $log

check_rpm "osg-configure"
tail_log /var/log/osg/osg-configure.log 200
dump_files_in_dir "/etc/osg/config.d"

check_rpm "perl"
run_cmd perl -V

check_rpm "python"
if [ $? -eq 0 ]; then
    echo "***** Python information:"                                                    >> $log
    python -c "import sys; print 'Version: ' + sys.version"                             >> $log
    python -c "import sys; print 'Executable: ' + sys.executable"                       >> $log
    python -c "import sys; print 'Prefix: ' + sys.prefix"                               >> $log
    python -c 'import platform; print "Architecture: ",; print platform.architecture()' >> $log
    python -c "import sys; print 'Search paths: ',; print  sys.path"                    >> $log
    echo ""                                                                             >> $log
fi

check_rpm openssl
run_cmd openssl version

run_cmd /usr/bin/env

list_directory "/etc/grid-security"
check_cert "/etc/grid-security/hostcert.pem"
check_cert "/etc/grid-security/http/httpcert.pem"
check_cert "/etc/grid-security/rsv/rsvcert.pem"

run_cmd rpm -q --whatprovides grid-certificates
list_directory "/etc/grid-security/certificates"

dump_file "/etc/grid-security/gsi-authz.conf"
dump_file "/etc/lcmaps.db"

check_rpm rpm
check_rpm yum

dump_file "/etc/yum.conf"
echo "***** Questions about yum.conf to consider:"    >> $log
echo "Are plugins enabled in yum.conf?"               >> $log
echo "If not, could be getting wrong RPMs from EPEL." >> $log
echo ""                                               >> $log


dump_files_in_dir "/etc/yum.repos.d/"

dump_files_in_dir "/etc/globus/"

tail_log /var/log/globus-gatekeeper.log 200
tail_log /var/log/edg-mkgridmap.log 50
tail_log /var/log/glite-ce-monitor/glite-ce-monitor.log 200
tail_log /var/log/gip/gip.log 200
tail_log /var/log/gridftp.log 200
tail_log /var/log/gridftp-auth.log 200
tail_log /var/log/bestman2/bestman2.log 200 
tail_log /var/log/bestman2/event.srm.log 200 


echo "***** All RPMs " >> $log
rpm -qa | sort                >> $log
echo ""                       >> $log

echo ""
echo "Your system profile is located in:"
echo "  $log"
echo ""
echo "If you are having problems, please mail a description of your problem and"
echo "this file to vdt-support@opensciencegrid.org"
echo ""

exit 0

