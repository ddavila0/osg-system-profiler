#!/bin/sh

PACKAGE=vdt-system-profiler
VERSION=0.0.1

if [ $# -gt 1 ]; then
    echo "usage: make-release [UPSTREAM]"
    exit 1
fi

UPSTREAM_ROOT=/p/vdt/public/html/upstream
if [ $# -eq 1 ]; then
    UPSTREAM_ROOT=$1
fi
if [ ! -d $UPSTREAM_ROOT ]; then
    echo "Upstream root '$UPSTREAM_ROOT' is not a directory"
    exit 1
fi

TEMP_DIR=`mktemp -d -p . working_dir_XXXXXXXX`
or_die() {
    if [ $? -ne 0 ]; then
        echo $1
        if [ "x$TEMP_DIR" != "x" ]; then
            if [ -d $TEMP_DIR ]; then
                echo "Cleaning up"
                rm -fr $TEMP_DIR >/dev/null 2>&1
            fi
        fi
        exit 1
    fi
}

SOURCE_DIR=$PACKAGE-$VERSION

mkdir $TEMP_DIR/$SOURCE_DIR
or_die "Could not create source directory"

cp -p vdt-system-profiler $TEMP_DIR/$SOURCE_DIR/
or_die "Could not copy source files into source directory"

TARBALL=$TEMP_DIR/$SOURCE_DIR.tar.gz

tar czf $TEMP_DIR/$SOURCE_DIR.tar.gz -C $TEMP_DIR $SOURCE_DIR
or_die "Could not create source tarball"

PACKAGE_DIR=$UPSTREAM_ROOT/$PACKAGE
if [ ! -d $PACKAGE_DIR ]; then
    mkdir $PACKAGE_DIR
    or_die "Could not create upstream package directory"
fi

VERSION_DIR=$PACKAGE_DIR/$VERSION
if [ ! -d $VERSION_DIR ]; then
    mkdir $VERSION_DIR
    or_die "Could not create upstream version directory"
fi

if [ -e $VERSION_DIR/$SOURCE_DIR.tar.gz ]; then
    echo "Source tarball already exists: '$VERSION_DIR/$SOURCE_DIR.tar.gz'"
    false
    or_die "Remove existing source tarball or increment release version"
fi

cp -p $TEMP_DIR/$SOURCE_DIR.tar.gz $VERSION_DIR/
or_die "Could not copy source tarball to upstream directory"

rm -fr $TEMP_DIR
or_die "Could not clean up temporary working directory"

echo "Installed $VERSION_DIR/$SOURCE_DIR.tar.gz"
